---
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import { Card, Pagination } from 'accessible-astro-components';

import { BASE_URL } from '../../../astro.config.mjs';

import { getCollection } from 'astro:content';
import type { PaginateFunction } from 'astro';

const projects = (await getCollection('projects')).sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf());

export async function getStaticPaths({ paginate }: { paginate: PaginateFunction }) {
  const collection = await getCollection('projects');
  return paginate(collection, { pageSize: 6 });
}

const { page } = Astro.props;
---

<DefaultLayout title="Projects" description="A more complete list of current and past projects.">
  <section class="my-12">
    <div class="space-content container">
      <h1>Projects</h1>
      <p class="text-2xl">A more complete list of some of my current and past projects.</p>
    </div>
  </section>
  <section class="my-12">
    <div class="container">
      <p class="text-sm"><em>Project {page.start + 1} through {page.end + 1} of {page.total} total projects</em></p>
      <ul class="my-3">
        {
          projects.map((project) => (
            <li>
              <Card
                url={BASE_URL + '/projects/' + project.data.title.replaceAll(' ', '-').toLowerCase()}
                title={project.data.title}
                footer={'userId:' + 'fake-id'}
                img={BASE_URL + '/img/' + project.data.images.hero}
              >
                {project.data.description}
              </Card>
            </li>
          ))
        }
      </ul>
      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? BASE_URL + '/projects' : null}
          previousPage={page.url.prev ? page.url.prev : null}
          nextPage={page.url.next ? page.url.next : null}
          lastPage={page.url.next ? `${BASE_URL}/projects/${Math.round(page.total / page.size)}` : null}
          currentPage={page.currentPage}
          totalPages={Math.round(page.total / page.size)}
        />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
