---
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import { Breadcrumbs, BreadcrumbsItem } from 'accessible-astro-components';
import { Icon } from 'astro-icon';

import { CollectionEntry, getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import iconMap, { IconMap } from '../../assets/img/iconMap';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: project,
  }));
}
type Props = CollectionEntry<'projects'>;

const project = Astro.props;
const { title, description, tech, links, pubDate, heroImage, accentImage } = project.data;
const { Content } = await project.render();
---

<DefaultLayout title={title} description={description} url={title}>
  <div class="container">
    <div class="mt-12">
      <Breadcrumbs>
        <BreadcrumbsItem href="/" label="Home" />
        <BreadcrumbsItem href="/projects" label="Projects" />
        <BreadcrumbsItem currentPage={true} label={title} />
      </Breadcrumbs>
    </div>
  </div>
  <section class="my-12">
    <div class="space-content container">
      <h1 class="text-6xl">{title}</h1><br />
      <h2 class="text-3xl">{description}</h2>
      <p>{(<FormattedDate date={pubDate} />)}</p>
      <img class="elevation-300 radius-large" src={heroImage} alt="description" />
      <ul class="my-24 grid-cols-2 flex-wrap gap-4 sm:grid-cols-3 md:flex lg:grid-cols-4 xl:grid-cols-8">
        {
          tech.sort().map((el) => (
            <li class="min-w-fit pr-4">
              <span>
                <Icon name={iconMap[el.toLowerCase() as keyof IconMap]} class="inline h-6" />
              </span>
              <span class="">{el}</span>
            </li>
          ))
        }
      </ul>
    </div>
  </section>
  <section class="my-12">
    <div class="container">
      <p class="text-2xl">{(<Content />)}</p>
    </div>
  </section>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }
</style>
