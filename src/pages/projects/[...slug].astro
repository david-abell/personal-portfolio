---
import DefaultLayout from '../../layouts/DefaultLayout.astro';
import { Breadcrumbs, BreadcrumbsItem } from 'accessible-astro-components';
import { Icon } from 'astro-icon';

import { type CollectionEntry, getCollection } from 'astro:content';
import FormattedDate from '../../components/FormattedDate.astro';
import iconMap, { type IconMap } from '../../assets/img/iconMap';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: project,
  }));
}
type Props = CollectionEntry<'projects'>;

const project = Astro.props;
const { title, description, tech, links, pubDate, images } = project.data;
const { Content } = await project.render();
---

<DefaultLayout title={title} description={description} url={title}>
  <div class="container">
    <div class="mt-12">
      <Breadcrumbs>
        <BreadcrumbsItem href={`${import.meta.env.BASE_URL}`} label="Home" />
        <BreadcrumbsItem href={`${import.meta.env.BASE_URL}/projects`} label="Projects" />
        <BreadcrumbsItem currentPage={true} label={title} />
      </Breadcrumbs>
    </div>
  </div>
  <div class="relative">
    <section class="my-12 container">
      <div class="mx-auto max-w-3xl space-content">
        <div class="mx-auto">
          <h1 class="text-6xl leading-relaxed">{title}</h1>
          <h2 class="text-2xl">{description}</h2>
        </div>
        <p>{(<FormattedDate date={pubDate} />)}</p>
        <img class="radius-large mx-auto" src={`${import.meta.env.BASE_URL}/img/${images.hero}`} alt="description" />
        <ul class="grid-cols-2 flex-wrap gap-4 sm:grid-cols-3 md:flex lg:grid-cols-4 xl:grid-cols-8">
          {
            tech.sort().map((el) => (
              <li class="min-w-fit pr-4">
                <span>
                  <Icon name={iconMap[el.toLowerCase() as IconMap] || 'ic:round-flag-circle'} class="inline h-6" />
                </span>
                <span class="">{el}</span>
              </li>
            ))
          }
        </ul>
        <ul class="grid-cols-2 flex-wrap gap-4 sm:grid-cols-3 md:flex lg:grid-cols-4 xl:grid-cols-8">
          <li class="min-w-fit pr-4">
            <a href={links.github}>View code on Github</a>
          </li>
          {
            links.live && (
              <li class="min-w-fit pr-4">
                <a href={links.live}>See this project</a>
              </li>
            )
          }
        </ul>
      </div>
    </section>
    <section class="container">
      <div
        class="prose dark:prose-invert md:prose-lg lg:prose-xl mx-auto prose-code:before:hidden prose-code:after:hidden"
      >
        <Content />
      </div>
    </section>
  </div>
</DefaultLayout>

<style lang="scss">
  ul {
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: 4rem;

    @media (min-width: 550px) {
      grid-template-columns: repeat(2, 1fr);
      grid-gap: 2rem;
    }

    @media (min-width: 950px) {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  :global(.toc-level-1 .toc-item) {
    list-style-type: decimal;
    display: list-item;
    list-style-position: inside;
  }

  :global(.toc-level-2 .toc-item) {
    padding-left: 1rem;
    display: list-item;
    list-style-type: disc;
    list-style-position: inside;
  }
</style>
